/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package iot;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Notification extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -4413345520051551177L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Notification\",\"namespace\":\"iot\",\"fields\":[{\"name\":\"deviceId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"deviceSerial\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"deviceLongitude\",\"type\":\"double\"},{\"name\":\"deviceLatitude\",\"type\":\"double\"},{\"name\":\"coffeeMachineId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"coffeeMachineSerial\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"groupCount\",\"type\":\"int\",\"default\":0},{\"name\":\"customerId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"customerName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"customerLongitude\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"customerLatitude\",\"type\":[\"null\",\"double\"],\"default\":null}],\"connect.name\":\"iot\"}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Notification> ENCODER =
      new BinaryMessageEncoder<Notification>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Notification> DECODER =
      new BinaryMessageDecoder<Notification>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<Notification> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<Notification> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Notification>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this Notification to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a Notification from a ByteBuffer. */
  public static Notification fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.String deviceId;
  @Deprecated public java.lang.String deviceSerial;
  @Deprecated public double deviceLongitude;
  @Deprecated public double deviceLatitude;
  @Deprecated public java.lang.String coffeeMachineId;
  @Deprecated public java.lang.String coffeeMachineSerial;
  @Deprecated public int groupCount;
  @Deprecated public java.lang.String customerId;
  @Deprecated public java.lang.String customerName;
  @Deprecated public java.lang.Double customerLongitude;
  @Deprecated public java.lang.Double customerLatitude;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Notification() {}

  /**
   * All-args constructor.
   * @param deviceId The new value for deviceId
   * @param deviceSerial The new value for deviceSerial
   * @param deviceLongitude The new value for deviceLongitude
   * @param deviceLatitude The new value for deviceLatitude
   * @param coffeeMachineId The new value for coffeeMachineId
   * @param coffeeMachineSerial The new value for coffeeMachineSerial
   * @param groupCount The new value for groupCount
   * @param customerId The new value for customerId
   * @param customerName The new value for customerName
   * @param customerLongitude The new value for customerLongitude
   * @param customerLatitude The new value for customerLatitude
   */
  public Notification(java.lang.String deviceId, java.lang.String deviceSerial, java.lang.Double deviceLongitude, java.lang.Double deviceLatitude, java.lang.String coffeeMachineId, java.lang.String coffeeMachineSerial, java.lang.Integer groupCount, java.lang.String customerId, java.lang.String customerName, java.lang.Double customerLongitude, java.lang.Double customerLatitude) {
    this.deviceId = deviceId;
    this.deviceSerial = deviceSerial;
    this.deviceLongitude = deviceLongitude;
    this.deviceLatitude = deviceLatitude;
    this.coffeeMachineId = coffeeMachineId;
    this.coffeeMachineSerial = coffeeMachineSerial;
    this.groupCount = groupCount;
    this.customerId = customerId;
    this.customerName = customerName;
    this.customerLongitude = customerLongitude;
    this.customerLatitude = customerLatitude;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return deviceId;
    case 1: return deviceSerial;
    case 2: return deviceLongitude;
    case 3: return deviceLatitude;
    case 4: return coffeeMachineId;
    case 5: return coffeeMachineSerial;
    case 6: return groupCount;
    case 7: return customerId;
    case 8: return customerName;
    case 9: return customerLongitude;
    case 10: return customerLatitude;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: deviceId = (java.lang.String)value$; break;
    case 1: deviceSerial = (java.lang.String)value$; break;
    case 2: deviceLongitude = (java.lang.Double)value$; break;
    case 3: deviceLatitude = (java.lang.Double)value$; break;
    case 4: coffeeMachineId = (java.lang.String)value$; break;
    case 5: coffeeMachineSerial = (java.lang.String)value$; break;
    case 6: groupCount = (java.lang.Integer)value$; break;
    case 7: customerId = (java.lang.String)value$; break;
    case 8: customerName = (java.lang.String)value$; break;
    case 9: customerLongitude = (java.lang.Double)value$; break;
    case 10: customerLatitude = (java.lang.Double)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'deviceId' field.
   * @return The value of the 'deviceId' field.
   */
  public java.lang.String getDeviceId() {
    return deviceId;
  }

  /**
   * Sets the value of the 'deviceId' field.
   * @param value the value to set.
   */
  public void setDeviceId(java.lang.String value) {
    this.deviceId = value;
  }

  /**
   * Gets the value of the 'deviceSerial' field.
   * @return The value of the 'deviceSerial' field.
   */
  public java.lang.String getDeviceSerial() {
    return deviceSerial;
  }

  /**
   * Sets the value of the 'deviceSerial' field.
   * @param value the value to set.
   */
  public void setDeviceSerial(java.lang.String value) {
    this.deviceSerial = value;
  }

  /**
   * Gets the value of the 'deviceLongitude' field.
   * @return The value of the 'deviceLongitude' field.
   */
  public java.lang.Double getDeviceLongitude() {
    return deviceLongitude;
  }

  /**
   * Sets the value of the 'deviceLongitude' field.
   * @param value the value to set.
   */
  public void setDeviceLongitude(java.lang.Double value) {
    this.deviceLongitude = value;
  }

  /**
   * Gets the value of the 'deviceLatitude' field.
   * @return The value of the 'deviceLatitude' field.
   */
  public java.lang.Double getDeviceLatitude() {
    return deviceLatitude;
  }

  /**
   * Sets the value of the 'deviceLatitude' field.
   * @param value the value to set.
   */
  public void setDeviceLatitude(java.lang.Double value) {
    this.deviceLatitude = value;
  }

  /**
   * Gets the value of the 'coffeeMachineId' field.
   * @return The value of the 'coffeeMachineId' field.
   */
  public java.lang.String getCoffeeMachineId() {
    return coffeeMachineId;
  }

  /**
   * Sets the value of the 'coffeeMachineId' field.
   * @param value the value to set.
   */
  public void setCoffeeMachineId(java.lang.String value) {
    this.coffeeMachineId = value;
  }

  /**
   * Gets the value of the 'coffeeMachineSerial' field.
   * @return The value of the 'coffeeMachineSerial' field.
   */
  public java.lang.String getCoffeeMachineSerial() {
    return coffeeMachineSerial;
  }

  /**
   * Sets the value of the 'coffeeMachineSerial' field.
   * @param value the value to set.
   */
  public void setCoffeeMachineSerial(java.lang.String value) {
    this.coffeeMachineSerial = value;
  }

  /**
   * Gets the value of the 'groupCount' field.
   * @return The value of the 'groupCount' field.
   */
  public java.lang.Integer getGroupCount() {
    return groupCount;
  }

  /**
   * Sets the value of the 'groupCount' field.
   * @param value the value to set.
   */
  public void setGroupCount(java.lang.Integer value) {
    this.groupCount = value;
  }

  /**
   * Gets the value of the 'customerId' field.
   * @return The value of the 'customerId' field.
   */
  public java.lang.String getCustomerId() {
    return customerId;
  }

  /**
   * Sets the value of the 'customerId' field.
   * @param value the value to set.
   */
  public void setCustomerId(java.lang.String value) {
    this.customerId = value;
  }

  /**
   * Gets the value of the 'customerName' field.
   * @return The value of the 'customerName' field.
   */
  public java.lang.String getCustomerName() {
    return customerName;
  }

  /**
   * Sets the value of the 'customerName' field.
   * @param value the value to set.
   */
  public void setCustomerName(java.lang.String value) {
    this.customerName = value;
  }

  /**
   * Gets the value of the 'customerLongitude' field.
   * @return The value of the 'customerLongitude' field.
   */
  public java.lang.Double getCustomerLongitude() {
    return customerLongitude;
  }

  /**
   * Sets the value of the 'customerLongitude' field.
   * @param value the value to set.
   */
  public void setCustomerLongitude(java.lang.Double value) {
    this.customerLongitude = value;
  }

  /**
   * Gets the value of the 'customerLatitude' field.
   * @return The value of the 'customerLatitude' field.
   */
  public java.lang.Double getCustomerLatitude() {
    return customerLatitude;
  }

  /**
   * Sets the value of the 'customerLatitude' field.
   * @param value the value to set.
   */
  public void setCustomerLatitude(java.lang.Double value) {
    this.customerLatitude = value;
  }

  /**
   * Creates a new Notification RecordBuilder.
   * @return A new Notification RecordBuilder
   */
  public static iot.Notification.Builder newBuilder() {
    return new iot.Notification.Builder();
  }

  /**
   * Creates a new Notification RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Notification RecordBuilder
   */
  public static iot.Notification.Builder newBuilder(iot.Notification.Builder other) {
    return new iot.Notification.Builder(other);
  }

  /**
   * Creates a new Notification RecordBuilder by copying an existing Notification instance.
   * @param other The existing instance to copy.
   * @return A new Notification RecordBuilder
   */
  public static iot.Notification.Builder newBuilder(iot.Notification other) {
    return new iot.Notification.Builder(other);
  }

  /**
   * RecordBuilder for Notification instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Notification>
    implements org.apache.avro.data.RecordBuilder<Notification> {

    private java.lang.String deviceId;
    private java.lang.String deviceSerial;
    private double deviceLongitude;
    private double deviceLatitude;
    private java.lang.String coffeeMachineId;
    private java.lang.String coffeeMachineSerial;
    private int groupCount;
    private java.lang.String customerId;
    private java.lang.String customerName;
    private java.lang.Double customerLongitude;
    private java.lang.Double customerLatitude;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(iot.Notification.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.deviceId)) {
        this.deviceId = data().deepCopy(fields()[0].schema(), other.deviceId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.deviceSerial)) {
        this.deviceSerial = data().deepCopy(fields()[1].schema(), other.deviceSerial);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.deviceLongitude)) {
        this.deviceLongitude = data().deepCopy(fields()[2].schema(), other.deviceLongitude);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.deviceLatitude)) {
        this.deviceLatitude = data().deepCopy(fields()[3].schema(), other.deviceLatitude);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.coffeeMachineId)) {
        this.coffeeMachineId = data().deepCopy(fields()[4].schema(), other.coffeeMachineId);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.coffeeMachineSerial)) {
        this.coffeeMachineSerial = data().deepCopy(fields()[5].schema(), other.coffeeMachineSerial);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.groupCount)) {
        this.groupCount = data().deepCopy(fields()[6].schema(), other.groupCount);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.customerId)) {
        this.customerId = data().deepCopy(fields()[7].schema(), other.customerId);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.customerName)) {
        this.customerName = data().deepCopy(fields()[8].schema(), other.customerName);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.customerLongitude)) {
        this.customerLongitude = data().deepCopy(fields()[9].schema(), other.customerLongitude);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.customerLatitude)) {
        this.customerLatitude = data().deepCopy(fields()[10].schema(), other.customerLatitude);
        fieldSetFlags()[10] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Notification instance
     * @param other The existing instance to copy.
     */
    private Builder(iot.Notification other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.deviceId)) {
        this.deviceId = data().deepCopy(fields()[0].schema(), other.deviceId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.deviceSerial)) {
        this.deviceSerial = data().deepCopy(fields()[1].schema(), other.deviceSerial);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.deviceLongitude)) {
        this.deviceLongitude = data().deepCopy(fields()[2].schema(), other.deviceLongitude);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.deviceLatitude)) {
        this.deviceLatitude = data().deepCopy(fields()[3].schema(), other.deviceLatitude);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.coffeeMachineId)) {
        this.coffeeMachineId = data().deepCopy(fields()[4].schema(), other.coffeeMachineId);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.coffeeMachineSerial)) {
        this.coffeeMachineSerial = data().deepCopy(fields()[5].schema(), other.coffeeMachineSerial);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.groupCount)) {
        this.groupCount = data().deepCopy(fields()[6].schema(), other.groupCount);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.customerId)) {
        this.customerId = data().deepCopy(fields()[7].schema(), other.customerId);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.customerName)) {
        this.customerName = data().deepCopy(fields()[8].schema(), other.customerName);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.customerLongitude)) {
        this.customerLongitude = data().deepCopy(fields()[9].schema(), other.customerLongitude);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.customerLatitude)) {
        this.customerLatitude = data().deepCopy(fields()[10].schema(), other.customerLatitude);
        fieldSetFlags()[10] = true;
      }
    }

    /**
      * Gets the value of the 'deviceId' field.
      * @return The value.
      */
    public java.lang.String getDeviceId() {
      return deviceId;
    }

    /**
      * Sets the value of the 'deviceId' field.
      * @param value The value of 'deviceId'.
      * @return This builder.
      */
    public iot.Notification.Builder setDeviceId(java.lang.String value) {
      validate(fields()[0], value);
      this.deviceId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'deviceId' field has been set.
      * @return True if the 'deviceId' field has been set, false otherwise.
      */
    public boolean hasDeviceId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'deviceId' field.
      * @return This builder.
      */
    public iot.Notification.Builder clearDeviceId() {
      deviceId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'deviceSerial' field.
      * @return The value.
      */
    public java.lang.String getDeviceSerial() {
      return deviceSerial;
    }

    /**
      * Sets the value of the 'deviceSerial' field.
      * @param value The value of 'deviceSerial'.
      * @return This builder.
      */
    public iot.Notification.Builder setDeviceSerial(java.lang.String value) {
      validate(fields()[1], value);
      this.deviceSerial = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'deviceSerial' field has been set.
      * @return True if the 'deviceSerial' field has been set, false otherwise.
      */
    public boolean hasDeviceSerial() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'deviceSerial' field.
      * @return This builder.
      */
    public iot.Notification.Builder clearDeviceSerial() {
      deviceSerial = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'deviceLongitude' field.
      * @return The value.
      */
    public java.lang.Double getDeviceLongitude() {
      return deviceLongitude;
    }

    /**
      * Sets the value of the 'deviceLongitude' field.
      * @param value The value of 'deviceLongitude'.
      * @return This builder.
      */
    public iot.Notification.Builder setDeviceLongitude(double value) {
      validate(fields()[2], value);
      this.deviceLongitude = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'deviceLongitude' field has been set.
      * @return True if the 'deviceLongitude' field has been set, false otherwise.
      */
    public boolean hasDeviceLongitude() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'deviceLongitude' field.
      * @return This builder.
      */
    public iot.Notification.Builder clearDeviceLongitude() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'deviceLatitude' field.
      * @return The value.
      */
    public java.lang.Double getDeviceLatitude() {
      return deviceLatitude;
    }

    /**
      * Sets the value of the 'deviceLatitude' field.
      * @param value The value of 'deviceLatitude'.
      * @return This builder.
      */
    public iot.Notification.Builder setDeviceLatitude(double value) {
      validate(fields()[3], value);
      this.deviceLatitude = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'deviceLatitude' field has been set.
      * @return True if the 'deviceLatitude' field has been set, false otherwise.
      */
    public boolean hasDeviceLatitude() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'deviceLatitude' field.
      * @return This builder.
      */
    public iot.Notification.Builder clearDeviceLatitude() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'coffeeMachineId' field.
      * @return The value.
      */
    public java.lang.String getCoffeeMachineId() {
      return coffeeMachineId;
    }

    /**
      * Sets the value of the 'coffeeMachineId' field.
      * @param value The value of 'coffeeMachineId'.
      * @return This builder.
      */
    public iot.Notification.Builder setCoffeeMachineId(java.lang.String value) {
      validate(fields()[4], value);
      this.coffeeMachineId = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'coffeeMachineId' field has been set.
      * @return True if the 'coffeeMachineId' field has been set, false otherwise.
      */
    public boolean hasCoffeeMachineId() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'coffeeMachineId' field.
      * @return This builder.
      */
    public iot.Notification.Builder clearCoffeeMachineId() {
      coffeeMachineId = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'coffeeMachineSerial' field.
      * @return The value.
      */
    public java.lang.String getCoffeeMachineSerial() {
      return coffeeMachineSerial;
    }

    /**
      * Sets the value of the 'coffeeMachineSerial' field.
      * @param value The value of 'coffeeMachineSerial'.
      * @return This builder.
      */
    public iot.Notification.Builder setCoffeeMachineSerial(java.lang.String value) {
      validate(fields()[5], value);
      this.coffeeMachineSerial = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'coffeeMachineSerial' field has been set.
      * @return True if the 'coffeeMachineSerial' field has been set, false otherwise.
      */
    public boolean hasCoffeeMachineSerial() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'coffeeMachineSerial' field.
      * @return This builder.
      */
    public iot.Notification.Builder clearCoffeeMachineSerial() {
      coffeeMachineSerial = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'groupCount' field.
      * @return The value.
      */
    public java.lang.Integer getGroupCount() {
      return groupCount;
    }

    /**
      * Sets the value of the 'groupCount' field.
      * @param value The value of 'groupCount'.
      * @return This builder.
      */
    public iot.Notification.Builder setGroupCount(int value) {
      validate(fields()[6], value);
      this.groupCount = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'groupCount' field has been set.
      * @return True if the 'groupCount' field has been set, false otherwise.
      */
    public boolean hasGroupCount() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'groupCount' field.
      * @return This builder.
      */
    public iot.Notification.Builder clearGroupCount() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'customerId' field.
      * @return The value.
      */
    public java.lang.String getCustomerId() {
      return customerId;
    }

    /**
      * Sets the value of the 'customerId' field.
      * @param value The value of 'customerId'.
      * @return This builder.
      */
    public iot.Notification.Builder setCustomerId(java.lang.String value) {
      validate(fields()[7], value);
      this.customerId = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'customerId' field has been set.
      * @return True if the 'customerId' field has been set, false otherwise.
      */
    public boolean hasCustomerId() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'customerId' field.
      * @return This builder.
      */
    public iot.Notification.Builder clearCustomerId() {
      customerId = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'customerName' field.
      * @return The value.
      */
    public java.lang.String getCustomerName() {
      return customerName;
    }

    /**
      * Sets the value of the 'customerName' field.
      * @param value The value of 'customerName'.
      * @return This builder.
      */
    public iot.Notification.Builder setCustomerName(java.lang.String value) {
      validate(fields()[8], value);
      this.customerName = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'customerName' field has been set.
      * @return True if the 'customerName' field has been set, false otherwise.
      */
    public boolean hasCustomerName() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'customerName' field.
      * @return This builder.
      */
    public iot.Notification.Builder clearCustomerName() {
      customerName = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'customerLongitude' field.
      * @return The value.
      */
    public java.lang.Double getCustomerLongitude() {
      return customerLongitude;
    }

    /**
      * Sets the value of the 'customerLongitude' field.
      * @param value The value of 'customerLongitude'.
      * @return This builder.
      */
    public iot.Notification.Builder setCustomerLongitude(java.lang.Double value) {
      validate(fields()[9], value);
      this.customerLongitude = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'customerLongitude' field has been set.
      * @return True if the 'customerLongitude' field has been set, false otherwise.
      */
    public boolean hasCustomerLongitude() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'customerLongitude' field.
      * @return This builder.
      */
    public iot.Notification.Builder clearCustomerLongitude() {
      customerLongitude = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'customerLatitude' field.
      * @return The value.
      */
    public java.lang.Double getCustomerLatitude() {
      return customerLatitude;
    }

    /**
      * Sets the value of the 'customerLatitude' field.
      * @param value The value of 'customerLatitude'.
      * @return This builder.
      */
    public iot.Notification.Builder setCustomerLatitude(java.lang.Double value) {
      validate(fields()[10], value);
      this.customerLatitude = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'customerLatitude' field has been set.
      * @return True if the 'customerLatitude' field has been set, false otherwise.
      */
    public boolean hasCustomerLatitude() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'customerLatitude' field.
      * @return This builder.
      */
    public iot.Notification.Builder clearCustomerLatitude() {
      customerLatitude = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Notification build() {
      try {
        Notification record = new Notification();
        record.deviceId = fieldSetFlags()[0] ? this.deviceId : (java.lang.String) defaultValue(fields()[0]);
        record.deviceSerial = fieldSetFlags()[1] ? this.deviceSerial : (java.lang.String) defaultValue(fields()[1]);
        record.deviceLongitude = fieldSetFlags()[2] ? this.deviceLongitude : (java.lang.Double) defaultValue(fields()[2]);
        record.deviceLatitude = fieldSetFlags()[3] ? this.deviceLatitude : (java.lang.Double) defaultValue(fields()[3]);
        record.coffeeMachineId = fieldSetFlags()[4] ? this.coffeeMachineId : (java.lang.String) defaultValue(fields()[4]);
        record.coffeeMachineSerial = fieldSetFlags()[5] ? this.coffeeMachineSerial : (java.lang.String) defaultValue(fields()[5]);
        record.groupCount = fieldSetFlags()[6] ? this.groupCount : (java.lang.Integer) defaultValue(fields()[6]);
        record.customerId = fieldSetFlags()[7] ? this.customerId : (java.lang.String) defaultValue(fields()[7]);
        record.customerName = fieldSetFlags()[8] ? this.customerName : (java.lang.String) defaultValue(fields()[8]);
        record.customerLongitude = fieldSetFlags()[9] ? this.customerLongitude : (java.lang.Double) defaultValue(fields()[9]);
        record.customerLatitude = fieldSetFlags()[10] ? this.customerLatitude : (java.lang.Double) defaultValue(fields()[10]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Notification>
    WRITER$ = (org.apache.avro.io.DatumWriter<Notification>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Notification>
    READER$ = (org.apache.avro.io.DatumReader<Notification>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
